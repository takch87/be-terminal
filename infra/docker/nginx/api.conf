server {
  listen 80;
  server_name api.be.terminal.beticket.net;

  # Enhanced security headers for API
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "strict-origin-when-cross-origin";
  add_header X-API-Version "2.0";
  
  # Rate limiting specifically for API endpoints
  limit_req_zone $binary_remote_addr zone=api_limit:10m rate=50r/m;
  limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=100r/m;

  # Webhook endpoint with higher rate limit
  location /webhooks/ {
    limit_req zone=webhook_limit burst=20 nodelay;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Special configuration for webhooks (preserve raw body)
    proxy_set_header Content-Type $content_type;
    proxy_set_header Content-Length $content_length;
    proxy_request_buffering off;
    
    # Temporarily pointing to backend-minimal (port 3002) until TypeScript API is ready
    proxy_pass http://host.docker.internal:3002;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    
    # Timeout configuration for webhooks
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
  }

  # Regular API endpoints
  location / {
    limit_req zone=api_limit burst=10 nodelay;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Temporarily pointing to backend-minimal (port 3002) until TypeScript API is ready
    proxy_pass http://host.docker.internal:3002;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    
    # CORS headers for API
    add_header Access-Control-Allow-Origin "https://be.terminal.beticket.net" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
      add_header Access-Control-Allow-Origin "https://be.terminal.beticket.net";
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
      add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
      add_header Access-Control-Allow-Credentials "true";
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 204;
    }
  }

  # Health check endpoint (no rate limiting)
  location /health {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://host.docker.internal:3002/api/health;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    
    access_log off;  # Don't log health checks
  }
}
